//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VitaliiPianykh.FileWall.Client.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VitaliiPianykh.FileWall.Client.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        internal static System.Drawing.Bitmap VitaliiPianykhLogo {
            get {
                object obj = ResourceManager.GetObject("VitaliiPianykhLogo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap AccessRequestMovie {
            get {
                object obj = ResourceManager.GetObject("AccessRequestMovie", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap FileWall {
            get {
                object obj = ResourceManager.GetObject("FileWall", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap FileWall1 {
            get {
                object obj = ResourceManager.GetObject("FileWall1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap AllowAccess {
            get {
                object obj = ResourceManager.GetObject("AllowAccess", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap AllowAccess1 {
            get {
                object obj = ResourceManager.GetObject("AllowAccess1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap AlwaysAsk {
            get {
                object obj = ResourceManager.GetObject("AlwaysAsk", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap BlockAccess {
            get {
                object obj = ResourceManager.GetObject("BlockAccess", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap BlockAccess1 {
            get {
                object obj = ResourceManager.GetObject("BlockAccess1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Bug {
            get {
                object obj = ResourceManager.GetObject("Bug", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ClearEvents {
            get {
                object obj = ResourceManager.GetObject("ClearEvents", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Close {
            get {
                object obj = ResourceManager.GetObject("Close", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DefaulItemIcon {
            get {
                object obj = ResourceManager.GetObject("DefaulItemIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap DefaultCategoryIcon {
            get {
                object obj = ResourceManager.GetObject("DefaultCategoryIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap EventDetails {
            get {
                object obj = ResourceManager.GetObject("EventDetails", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Events {
            get {
                object obj = ResourceManager.GetObject("Events", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Exit {
            get {
                object obj = ResourceManager.GetObject("Exit", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap FilesysBlocks {
            get {
                object obj = ResourceManager.GetObject("FilesysBlocks", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap FilesysBlocks1 {
            get {
                object obj = ResourceManager.GetObject("FilesysBlocks1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap FilesysPermits {
            get {
                object obj = ResourceManager.GetObject("FilesysPermits", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Filesystem {
            get {
                object obj = ResourceManager.GetObject("Filesystem", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Language {
            get {
                object obj = ResourceManager.GetObject("Language", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Preferences {
            get {
                object obj = ResourceManager.GetObject("Preferences", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Preferences1 {
            get {
                object obj = ResourceManager.GetObject("Preferences1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RefreshEvents {
            get {
                object obj = ResourceManager.GetObject("RefreshEvents", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RefreshRuleset {
            get {
                object obj = ResourceManager.GetObject("RefreshRuleset", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Registry {
            get {
                object obj = ResourceManager.GetObject("Registry", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RegistryBlocks {
            get {
                object obj = ResourceManager.GetObject("RegistryBlocks", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap RegistryPermits {
            get {
                object obj = ResourceManager.GetObject("RegistryPermits", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap SaveAs {
            get {
                object obj = ResourceManager.GetObject("SaveAs", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap ShowRules {
            get {
                object obj = ResourceManager.GetObject("ShowRules", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        internal static System.Drawing.Bitmap Skin {
            get {
                object obj = ResourceManager.GetObject("Skin", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bad protection.
        /// </summary>
        internal static string StatusBadProtection {
            get {
                return ResourceManager.GetString("StatusBadProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Excellent protection.
        /// </summary>
        internal static string StatusExcellentProtection {
            get {
                return ResourceManager.GetString("StatusExcellentProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Good protection.
        /// </summary>
        internal static string StatusGoodProtection {
            get {
                return ResourceManager.GetString("StatusGoodProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No protection.
        /// </summary>
        internal static string StatusNoProtection {
            get {
                return ResourceManager.GetString("StatusNoProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FileWall will restart to apply changes..
        /// </summary>
        internal static string WillRestart {
            get {
                return ResourceManager.GetString("WillRestart", resourceCulture);
            }
        }
    }
}
